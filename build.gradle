plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'

	// spotless plugin
	id 'com.diffplug.spotless' version '6.23.3'
}

group = 'com.pickkasso'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	runtimeOnly 'com.mysql:mysql-connector-j'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	//swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

	// Querydsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'

	//amazon S3
	implementation 'software.amazon.awssdk:s3:2.17.105'
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	// Spring Security Core
	implementation 'org.springframework.boot:spring-boot-starter-security'

	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

	// spring security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// Oauth2
	implementation 'org.springframework.security:spring-security-oauth2-client'
	implementation 'org.springframework.security:spring-security-oauth2-jose'

	// Spring Cloud
	implementation platform("org.springframework.cloud:spring-cloud-dependencies:2023.0.0")

	// Spring Cloud Open Feign
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
}

tasks.named('test') {
	useJUnitPlatform()
}

// compileJava 태스크가 실행되기 전에 spotlessApply 태스크가 먼저 실행되도록 구성
tasks.named('compileJava') {
	dependsOn 'spotlessApply'
}

def generated = 'src/main/generated'
tasks.withType(JavaCompile).configureEach {
	options.getGeneratedSourceOutputDirectory().set(file(generated))
}


clean {
	delete file(generated)
}

spotless {
	java {
		// Google Java 포맷 적용
		/*
            googleJavaFormat() : 탭은 2개의 공백
            googleJavaFormat().aosp() : 탭은 4개의 공백
            Reference : https://github.com/google/google-java-format/issues/525
         */
		googleJavaFormat().aosp()
		// 아래 순서로 import문 정렬
		importOrder('java', 'javax', 'jakarta', 'org', 'com')
		// 사용하지 않는 import 제거
		removeUnusedImports()
		// 각 라인 끝에 있는 공백을 제거
		trimTrailingWhitespace()
	}
}